{
  "name": "Codeo Light (No Italic)",
  "type": "light",
  "colors": {
    "focusBorder": "#93A1A1",
    "foreground": "#403f53",
    "widget.shadow": "#d9d9d9",
    "selection.background": "#7a8181ad",
    "errorForeground": "#403f53",
    "badge.background": "#2AA298",
    "badge.foreground": "#F0F0F0",
    "progressBar.background": "#2AA298",
    "debugExceptionWidget.background": "#F0F0F0",
    "debugExceptionWidget.border": "#d9d9d9",
    "panel.background": "#F0F0F0",
    "panel.border": "#d9d9d9",
    "extensionButton.prominentForeground": "#F0F0F0",
    "extensionButton.prominentBackground": "#2AA298",
    "pickerGroup.foreground": "#403f53",
    "pickerGroup.border": "#d9d9d9",
    "debugToolBar.background": "#F0F0F0",
    "activityBar.background": "#F0F0F0",
    "activityBar.foreground": "#403f53",
    "activityBar.border": "#F0F0F0",
    "activityBarBadge.background": "#403f53",
    "activityBarBadge.foreground": "#F0F0F0",
    "editor.background": "#FBFBFB",
    "editor.foreground": "#403f53",
    "editorLineNumber.foreground": "#90A7B2",
    "editorLineNumber.activeForeground": "#403f53",
    "editorCursor.foreground": "#90A7B2",
    "editor.selectionBackground": "#E0E0E0",
    "editor.selectionHighlightBackground": "#339cec33",
    "editor.wordHighlightBackground": "#339cec33",
    "editor.wordHighlightStrongBackground": "#007dd659",
    "editor.findMatchBackground": "#93A1A16c",
    "editor.findMatchHighlightBackground": "#93a1a16c",
    "editor.findRangeHighlightBackground": "#93a1a16c",
    "editor.hoverHighlightBackground": "#339cec33",
    "editor.lineHighlightBackground": "#F0F0F0",
    "editor.lineHighlightBorder": "#F0F0F0",
    "editorLink.activeForeground": "#403f53",
    "editor.rangeHighlightBackground": "#93a1a16c",
    "editorWhitespace.foreground": "#d9d9d9",
    "editorIndentGuide.background": "#d9d9d9",
    "editorRuler.foreground": "#d9d9d9",
    "editorCodeLens.foreground": "#403f53",
    "editorError.foreground": "#E64D49",
    "editorError.border": "#FBFBFB",
    "editorWarning.foreground": "#daaa01",
    "editorWarning.border": "#daaa01",
    "editorGutter.modifiedBackground": "#6fbef6",
    "editorGutter.addedBackground": "#49d0c5",
    "editorGutter.deletedBackground": "#f76e6e",
    "editorInlayHint.background": "#F0F0F0",
    "editorInlayHint.foreground": "#403f53",
    "editorWidget.background": "#F0F0F0",
    "editorWidget.border": "#d9d9d9",
    "editorSuggestWidget.background": "#F0F0F0",
    "editorSuggestWidget.border": "#d9d9d9",
    "editorSuggestWidget.foreground": "#403f53",
    "editorSuggestWidget.highlightForeground": "#403f53",
    "editorSuggestWidget.selectedBackground": "#d3e8f8",
    "editorHoverWidget.background": "#F0F0F0",
    "editorHoverWidget.border": "#d9d9d9",
    "editorGroup.border": "#F0F0F0",
    "editorGroupHeader.noTabsBackground": "#F0F0F0",
    "editorGroupHeader.tabsBackground": "#F0F0F0",
    "editorGroupHeader.tabsBorder": "#F0F0F0",
    "input.background": "#F0F0F0",
    "input.border": "#d9d9d9",
    "input.foreground": "#403f53",
    "input.placeholderForeground": "#93A1A1",
    "inputOption.activeBorder": "#2AA298",
    "inputValidation.errorBackground": "#f76e6e",
    "inputValidation.errorBorder": "#de3d3b",
    "inputValidation.infoBackground": "#F0F0F0",
    "inputValidation.infoBorder": "#D0D0D0",
    "inputValidation.warningBackground": "#daaa01",
    "inputValidation.warningBorder": "#E0AF02",
    "list.activeSelectionBackground": "#d3e8f8",
    "list.activeSelectionForeground": "#403f53",
    "list.focusBackground": "#d3e8f8",
    "list.focusForeground": "#403f53",
    "list.highlightForeground": "#403f53",
    "list.hoverBackground": "#d3e8f8",
    "list.hoverForeground": "#403f53",
    "list.inactiveSelectionBackground": "#E0E7EA",
    "list.inactiveSelectionForeground": "#403f53",
    "notifications.background": "#F0F0F0",
    "notifications.border": "#CCCCCC",
    "notificationCenter.border": "#CCCCCC",
    "notificationToast.border": "#CCCCCC",
    "notifications.foreground": "#403f53",
    "notificationLink.foreground": "#994cc3",
    "peekView.border": "#d9d9d9",
    "peekViewEditor.background": "#F6F6F6",
    "peekViewEditor.matchHighlightBackground": "#49d0c5",
    "peekViewResult.background": "#F0F0F0",
    "peekViewResult.fileForeground": "#403f53",
    "peekViewResult.lineForeground": "#403f53",
    "peekViewResult.matchHighlightBackground": "#49d0c5",
    "peekViewResult.selectionBackground": "#E0E7EA",
    "peekViewResult.selectionForeground": "#403f53",
    "peekViewTitle.background": "#F0F0F0",
    "peekViewTitleDescription.foreground": "#403f53",
    "peekViewTitleLabel.foreground": "#403f53",
    "scrollbar.shadow": "#CCCCCC",
    "sideBar.background": "#F0F0F0",
    "sideBar.foreground": "#403f53",
    "sideBar.border": "#F0F0F0",
    "sideBarTitle.foreground": "#403f53",
    "statusBar.background": "#F0F0F0",
    "statusBar.foreground": "#403f53",
    "statusBar.border": "#F0F0F0",
    "statusBar.debuggingBackground": "#F0F0F0",
    "statusBar.debuggingForeground": "#403f53",
    "statusBar.noFolderForeground": "#403f53",
    "statusBar.noFolderBackground": "#F0F0F0",
    "tab.activeBackground": "#F6F6F6",
    "tab.activeForeground": "#403f53",
    "tab.border": "#F0F0F0",
    "tab.inactiveBackground": "#F0F0F0",
    "tab.inactiveForeground": "#403f53",
    "terminal.ansiWhite": "#403f53",
    "terminal.ansiBlack": "#403f53",
    "terminal.ansiBlue": "#288ed7",
    "terminal.ansiCyan": "#2AA298",
    "terminal.ansiGreen": "#08916a",
    "terminal.ansiMagenta": "#d6438a",
    "terminal.ansiRed": "#de3d3b",
    "terminal.ansiYellow": "#E0AF02",
    "terminal.ansiBrightWhite": "#93A1A1",
    "terminal.ansiBrightBlack": "#403f53",
    "terminal.ansiBrightBlue": "#288ed7",
    "terminal.ansiBrightCyan": "#2AA298",
    "terminal.ansiBrightGreen": "#08916a",
    "terminal.ansiBrightMagenta": "#d6438a",
    "terminal.ansiBrightRed": "#de3d3b",
    "terminal.ansiBrightYellow": "#E0AF02",
    "titleBar.activeBackground": "#F0F0F0"
  },
  "tokenColors": [
    {
      "name": "Comment",
      "scope": [
        "comment",
        "punctuation.definition.comment"
      ],
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "String",
      "scope": "string",
      "settings": {}
    },
    {
      "name": "Number",
      "scope": [
        "constant.numeric",
        "constant.character.numeric"
      ],
      "settings": {}
    },
    {
      "name": "Keyword",
      "scope": [
        "punctuation.accessor",
        "keyword"
      ],
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Variable",
      "scope": "variable",
      "settings": {}
    },
    {
      "name": "Constant",
      "scope": [
        "constant.language",
        "punctuation.definition.constant",
        "variable.other.constant"
      ],
      "settings": {}
    },
    {
      "name": "Function name",
      "scope": "entity.name.function",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Class name",
      "scope": [
        "entity.name.class",
        "meta.class entity.name.type.class"
      ],
      "settings": {}
    },
    {
      "name": "Boolean",
      "scope": "constant.language.boolean",
      "settings": {}
    },
    {
      "name": "Null",
      "scope": "constant.language.null",
      "settings": {}
    },
    {
      "name": "Object",
      "scope": "object",
      "settings": {}
    },
    {
      "name": "Punctuation",
      "scope": [
        "punctuation",
        "meta.brace",
        "meta.delimiter.period"
      ],
      "settings": {}
    },
    {
      "name": "Changed",
      "scope": [
        "markup.changed",
        "meta.diff.header.git",
        "meta.diff.header.from-file",
        "meta.diff.header.to-file"
      ],
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Deleted",
      "scope": "markup.deleted.diff",
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Inserted",
      "scope": "markup.inserted.diff",
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Markdown Headings",
      "scope": [
        "markup.heading.markdown",
        "markup.heading.setext.1.markdown",
        "markup.heading.setext.2.markdown"
      ],
      "settings": {}
    },
    {
      "name": "Markdown Italics",
      "scope": "markup.italic.markdown",
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Markdown Bold",
      "scope": "markup.bold.markdown",
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Markdown Quote + others",
      "scope": "markup.quote.markdown",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markdown Raw Code + others",
      "scope": "markup.inline.raw.markdown",
      "settings": {}
    },
    {
      "name": "Markdown Links",
      "scope": [
        "markup.underline.link.markdown",
        "markup.underline.link.image.markdown"
      ],
      "settings": {}
    },
    {
      "name": "Markdown Inline Raw String",
      "scope": "markup.inline.raw.string.markdown",
      "settings": {}
    },
    {
      "name": "LESS Tag names",
      "scope": "entity.name.tag.less",
      "settings": {}
    },
    {
      "name": "LESS Keyword Other Unit",
      "scope": "keyword.other.unit.css",
      "settings": {}
    },
    {
      "name": "Attribute Name for LESS",
      "scope": "meta.attribute-selector.less entity.other.attribute-name.attribute",
      "settings": {}
    },
    {
      "name": "Tag names in Stylesheets",
      "scope": [
        "entity.name.tag.css",
        "entity.name.tag.less",
        "entity.name.tag.custom.css",
        "support.constant.property-value.css"
      ],
      "settings": {}
    },
    {
      "name": "Wildcard(*) selector in Stylesheets",
      "scope": [
        "entity.name.tag.wildcard.css",
        "entity.name.tag.wildcard.less",
        "entity.name.tag.wildcard.scss",
        "entity.name.tag.wildcard.sass"
      ],
      "settings": {}
    },
    {
      "name": "Attribute Name for CSS",
      "scope": [
        "meta.attribute-selector.css entity.other.attribute-name.attribute",
        "variable.other.readwrite.js"
      ],
      "settings": {}
    },
    {
      "name": "SCSS Variable",
      "scope": [
        "variable.scss",
        "variable.sass",
        "variable.parameter.url.scss",
        "variable.parameter.url.sass"
      ],
      "settings": {}
    },
    {
      "name": "Variables in SASS At-Rules",
      "scope": [
        "source.css.scss meta.at-rule variable",
        "source.css.sass meta.at-rule variable"
      ],
      "settings": {}
    },
    {
      "name": "Variables in SASS At-Rules (alt)",
      "scope": [
        "source.css.scss meta.at-rule variable",
        "source.css.sass meta.at-rule variable"
      ],
      "settings": {}
    },
    {
      "name": "Attribute Name for SASS",
      "scope": [
        "meta.attribute-selector.scss entity.other.attribute-name.attribute",
        "meta.attribute-selector.sass entity.other.attribute-name.attribute"
      ],
      "settings": {}
    },
    {
      "name": "Tag names in SASS",
      "scope": [
        "entity.name.tag.scss",
        "entity.name.tag.sass"
      ],
      "settings": {}
    },
    {
      "name": "SASS Keyword Other Unit",
      "scope": [
        "keyword.other.unit.scss",
        "keyword.other.unit.sass"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Variables and Object Properties",
      "scope": [
        "variable.other.readwrite.alias.ts",
        "variable.other.readwrite.alias.tsx",
        "variable.other.readwrite.ts",
        "variable.other.readwrite.tsx",
        "variable.other.object.ts",
        "variable.other.object.tsx",
        "variable.object.property.ts",
        "variable.object.property.tsx",
        "variable.other.ts",
        "variable.other.tsx",
        "variable.tsx",
        "variable.ts"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Entity Name Types",
      "scope": [
        "entity.name.type.ts",
        "entity.name.type.tsx"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Node Classes",
      "scope": [
        "support.class.node.ts",
        "support.class.node.tsx"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Entity Name Types as Parameters",
      "scope": [
        "meta.type.parameters.ts entity.name.type",
        "meta.type.parameters.tsx entity.name.type"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Import/Export Punctuations",
      "scope": [
        "meta.import.ts punctuation.definition.block",
        "meta.import.tsx punctuation.definition.block",
        "meta.export.ts punctuation.definition.block",
        "meta.export.tsx punctuation.definition.block"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Punctuation Decorators",
      "scope": [
        "meta.decorator punctuation.decorator.ts",
        "meta.decorator punctuation.decorator.tsx"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Punctuation Decorators (JSX)",
      "scope": "meta.tag.js meta.jsx.children.tsx",
      "settings": {}
    },
    {
      "name": "TypeScript Classes",
      "scope": "meta.class entity.name.type.class.tsx",
      "settings": {}
    },
    {
      "name": "TypeScript Entity Name Type",
      "scope": [
        "entity.name.type.tsx",
        "entity.name.type.module.tsx"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Class Variable Keyword",
      "scope": [
        "meta.class.ts meta.var.expr.ts storage.type.ts",
        "meta.class.tsx meta.var.expr.tsx storage.type.tsx"
      ],
      "settings": {}
    },
    {
      "name": "TypeScript Method Declaration",
      "scope": [
        "meta.method.declaration storage.type.ts",
        "meta.method.declaration storage.type.tsx"
      ],
      "settings": {}
    },
    {
      "name": "Language Constants in Python",
      "scope": "constant.language.python",
      "settings": {}
    },
    {
      "name": "Python Function Parameter and Arguments",
      "scope": [
        "variable.parameter.function.python",
        "meta.function-call.arguments.python"
      ],
      "settings": {}
    },
    {
      "name": "Python Function Call",
      "scope": [
        "meta.function-call.python",
        "meta.function-call.generic.python"
      ],
      "settings": {}
    },
    {
      "name": "Punctuations in Python",
      "scope": "punctuation.python",
      "settings": {}
    },
    {
      "name": "Decorator Functions in Python",
      "scope": "entity.name.function.decorator.python",
      "settings": {}
    },
    {
      "name": "Python Language Variable",
      "scope": "source.python variable.language.special",
      "settings": {}
    },
    {
      "name": "Python import control keyword",
      "scope": "keyword.control",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "PHP Variables",
      "scope": [
        "variable.other.php",
        "variable.other.property.php"
      ],
      "settings": {}
    },
    {
      "name": "Support Classes in PHP",
      "scope": "support.class.php",
      "settings": {}
    },
    {
      "name": "Punctuations in PHP function calls",
      "scope": "meta.function-call.php punctuation",
      "settings": {}
    },
    {
      "name": "PHP Global Variables",
      "scope": "variable.other.global.php",
      "settings": {}
    },
    {
      "name": "Declaration Punctuation in PHP Global Variables",
      "scope": "variable.other.global.php punctuation.definition.variable",
      "settings": {}
    },
    {
      "name": "Entity Names in PHP Code Documentations",
      "scope": [
        "entity.name.type.instance.phpdoc"
      ],
      "settings": {}
    },
    {
      "name": "Other Variables in PHP Code Documentations",
      "scope": [
        "variable.other.phpdoc"
      ],
      "settings": {}
    },
    {
      "name": "JavaScript Classes",
      "scope": "meta.class entity.name.type.class.js",
      "settings": {}
    },
    {
      "name": "JavaScript Method Declaration",
      "scope": "meta.method.declaration storage.type.js",
      "settings": {}
    },
    {
      "name": "JavaScript Terminator",
      "scope": "terminator.js",
      "settings": {}
    },
    {
      "name": "JavaScript Meta Punctuation Definition",
      "scope": "meta.js punctuation.definition.js",
      "settings": {}
    },
    {
      "name": "JavaScript module imports and exports",
      "scope": [
        "variable.other.meta.import.js",
        "meta.import.js variable.other",
        "variable.other.meta.export.js",
        "meta.export.js variable.other"
      ],
      "settings": {}
    },
    {
      "name": "JavaScript Variable Parameter Function",
      "scope": "variable.parameter.function.js",
      "settings": {}
    },
    {
      "name": "JavaScript[React] Variable Other Object",
      "scope": [
        "variable.other.object.js",
        "variable.other.object.jsx",
        "variable.object.property.js",
        "variable.object.property.jsx"
      ],
      "settings": {}
    },
    {
      "name": "JavaScript Variables",
      "scope": [
        "variable.js",
        "variable.other.js"
      ],
      "settings": {}
    },
    {
      "name": "JavaScript Entity Name Type",
      "scope": [
        "entity.name.type.js",
        "entity.name.type.module.js"
      ],
      "settings": {}
    },
    {
      "name": "JavaScript Support Classes",
      "scope": "support.class.js",
      "settings": {}
    },
    {
      "name": "JavaScript Other Variable",
      "scope": "variable.other.object.js",
      "settings": {}
    },
    {
      "name": "JavaScript Variable Other ReadWrite",
      "scope": [
        "variable.other.readwrite.js",
        "variable.parameter"
      ],
      "settings": {}
    },
    {
      "name": "Ruby Variables",
      "scope": [
        "variable.other.ruby"
      ],
      "settings": {}
    },
    {
      "name": "Ruby Class",
      "scope": [
        "entity.name.type.class.ruby"
      ],
      "settings": {}
    },
    {
      "name": "Ruby Hashkeys",
      "scope": "constant.language.symbol.hashkey.ruby",
      "settings": {}
    },
    {
      "name": "Ruby Symbols",
      "scope": "constant.language.symbol.ruby",
      "settings": {}
    },
    {
      "name": "JSON Property Names",
      "scope": "support.type.property-name.json",
      "settings": {}
    },
    {
      "name": "JSON Support Constants",
      "scope": "support.constant.json",
      "settings": {}
    },
    {
      "name": "JSON Property values (string)",
      "scope": "meta.structure.dictionary.value.json string.quoted.double",
      "settings": {}
    },
    {
      "name": "Strings in JSON values",
      "scope": "string.quoted.double.json punctuation.definition.string.json",
      "settings": {}
    },
    {
      "name": "Specific JSON Property values like null",
      "scope": "meta.structure.dictionary.json meta.structure.dictionary.value constant.language",
      "settings": {}
    },
    {
      "name": "Go Function Calls",
      "scope": "source.go meta.function-call.go",
      "settings": {}
    },
    {
      "name": "Go Keywords",
      "scope": [
        "source.go keyword.package.go",
        "source.go keyword.import.go",
        "source.go keyword.function.go",
        "source.go keyword.type.go",
        "source.go keyword.struct.go",
        "source.go keyword.interface.go",
        "source.go keyword.const.go",
        "source.go keyword.var.go",
        "source.go keyword.map.go",
        "source.go keyword.channel.go",
        "source.go keyword.control.go"
      ],
      "settings": {}
    },
    {
      "name": "Go Constants",
      "scope": [
        "source.go constant.language.go",
        "source.go constant.other.placeholder.go"
      ],
      "settings": {}
    },
    {
      "name": "C# Readwrite Variables",
      "scope": "variable.other.readwrite.cs",
      "settings": {}
    },
    {
      "name": "C# Classes & Storage types",
      "scope": [
        "entity.name.type.class.cs",
        "storage.type.cs"
      ],
      "settings": {}
    },
    {
      "name": "C# Namespaces",
      "scope": "entity.name.type.namespace.cs",
      "settings": {}
    },
    {
      "name": "C# Unquoted String Zone",
      "scope": "string.unquoted.preprocessor.message.cs",
      "settings": {}
    },
    {
      "name": "C# Region",
      "scope": [
        "punctuation.separator.hash.cs",
        "keyword.preprocessor.region.cs",
        "keyword.preprocessor.endregion.cs"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "C# Other Variables",
      "scope": "variable.other.object.cs",
      "settings": {}
    },
    {
      "name": "C# Enum",
      "scope": "entity.name.type.enum.cs",
      "settings": {}
    },
    {
      "name": "C++ Functions",
      "scope": [
        "entity.name.function.preprocessor.cpp",
        "entity.scope.name.cpp"
      ],
      "settings": {}
    },
    {
      "name": "C++ Meta Namespace",
      "scope": [
        "meta.namespace-block.cpp"
      ],
      "settings": {}
    },
    {
      "name": "C++ Language Primitive Storage",
      "scope": [
        "storage.type.language.primitive.cpp"
      ],
      "settings": {}
    },
    {
      "name": "C++ Preprocessor Macro",
      "scope": [
        "meta.preprocessor.macro.cpp"
      ],
      "settings": {}
    },
    {
      "name": "C++ Variable Parameter",
      "scope": [
        "variable.parameter"
      ],
      "settings": {}
    },
    {
      "name": "Dart String",
      "scope": [
        "string.interpolated.single.dart",
        "string.interpolated.double.dart"
      ],
      "settings": {}
    },
    {
      "name": "Dart Class",
      "scope": "support.class.dart",
      "settings": {}
    },
    {
      "name": "Elixir Classes",
      "scope": [
        "source.elixir support.type.elixir",
        "source.elixir meta.module.elixir entity.name.class.elixir"
      ],
      "settings": {}
    },
    {
      "name": "Elixir Functions",
      "scope": "source.elixir entity.name.function",
      "settings": {}
    },
    {
      "name": "Elixir Constants",
      "scope": [
        "source.elixir constant.other.symbol.elixir",
        "source.elixir constant.other.keywords.elixir"
      ],
      "settings": {}
    },
    {
      "name": "Elixir String Punctuations",
      "scope": "source.elixir punctuation.definition.string",
      "settings": {}
    },
    {
      "name": "Elixir",
      "scope": [
        "source.elixir variable.other.readwrite.module.elixir",
        "source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir"
      ],
      "settings": {}
    },
    {
      "name": "Elixir Binary Punctuations",
      "scope": "source.elixir .punctuation.binary.elixir",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "CoffeScript Variable Assignment",
      "scope": "variable.assignment.coffee",
      "settings": {}
    },
    {
      "name": "CoffeScript Parameter Function",
      "scope": "variable.parameter.function.coffee",
      "settings": {}
    },
    {
      "name": "CoffeeScript Assignments",
      "scope": "variable.assignment.coffee",
      "settings": {}
    },
    {
      "name": "YAML Entity Name Tags",
      "scope": "entity.name.tag.yaml",
      "settings": {}
    },
    {
      "name": "Powershell Variables",
      "scope": "variable.other.readwrite.powershell",
      "settings": {}
    },
    {
      "name": "Powershell Function",
      "scope": "support.function.powershell",
      "settings": {}
    },
    {
      "name": "Closure Constant Keyword",
      "scope": "constant.keyword.clojure",
      "settings": {}
    },
    {
      "name": "HTML Tag names",
      "scope": [
        "entity.name.tag",
        "meta.tag.other.html",
        "meta.tag.other.js",
        "meta.tag.other.tsx",
        "entity.name.tag.tsx",
        "entity.name.tag.js",
        "entity.name.tag",
        "meta.tag.js",
        "meta.tag.tsx",
        "meta.tag.html"
      ],
      "settings": {}
    },
    {
      "name": "HTML Punctuation Definition Tag",
      "scope": "punctuation.definition.tag.html",
      "settings": {}
    },
    {
      "name": "HTML Doctype",
      "scope": "meta.tag.sgml.doctype.html",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "ID Attribute Name in HTML",
      "scope": "entity.other.attribute-name.id.html",
      "settings": {}
    }
  ]
}